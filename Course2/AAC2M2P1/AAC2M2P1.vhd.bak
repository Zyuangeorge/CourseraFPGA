LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.numeric_std.ALL;

entity AAC2M2P1 is port (                 	
   CP: 	in std_logic; 	-- clock
   SR:  in std_logic;  -- Active low, synchronous reset
   P:    in std_logic_vector(3 downto 0);  -- Parallel input
   PE:   in std_logic;  -- Parallel Enable (Load)
   CEP: in std_logic;  -- Count enable parallel input
   CET:  in std_logic; -- Count enable trickle input
   Q:   out std_logic_vector(3 downto 0);            			
    TC:  out std_logic  -- Terminal Count
);            		
end AAC2M2P1;

architecture Behavioral of AAC2M2P1 is
    signal count : STD_LOGIC_VECTOR(3 downto 0) := "0000";
begin
    process (CP, MR)
    begin
        -- Asynchronous Master Reset
        if MR = '0' then
            count <= "0000";
        elsif rising_edge(CP) then
            -- Synchronous Reset
            if SR = '0' then
                count <= "0000";
            -- Parallel Load
            elsif PE = '0' then
                count <= P;
            -- Counting Logic
            elsif (CEP = '1' and CET = '1') then
                if count = "1111" then
                    count <= "0000"; -- Wrap around for modulo-16
                else
                    count <= count + 1;
                end if;
            end if;
        end if;
    end process;

    -- Assign outputs
    Q <= count;
    TC <= '1' when (count = "1111" and CEP = '1' and CET = '1') else '0';

end Behavioral;
